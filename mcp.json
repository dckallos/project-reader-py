{
  "name": "project-reader-py",
  "version": "1.0.0",
  "description": "MCP server for reading project files while respecting .gitignore patterns",
  "author": "Cline",
  "license": "MIT",
  "tools": [
    {
      "name": "list_files",
      "description": "List files in a directory while respecting .gitignore patterns",
      "inputSchema": {
        "type": "object",
        "properties": {
          "directory": {
            "type": "string",
            "description": "The directory to list files from"
          },
          "recursive": {
            "type": "boolean",
            "description": "Whether to list files recursively",
            "default": false
          },
          "include_hidden": {
            "type": "boolean",
            "description": "Whether to include hidden files",
            "default": false
          },
          "respect_gitignore": {
            "type": "boolean",
            "description": "Whether to respect .gitignore patterns",
            "default": true
          },
          "file_extensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of file extensions to include (e.g., [\"py\", \"txt\"])"
          },
          "max_depth": {
            "type": "integer",
            "description": "Maximum recursion depth (-1 for unlimited)",
            "default": -1
          }
        },
        "required": ["directory"]
      }
    },
    {
      "name": "read_file",
      "description": "Read the contents of a file",
      "inputSchema": {
        "type": "object",
        "properties": {
          "file_path": {
            "type": "string",
            "description": "The path of the file to read"
          },
          "binary": {
            "type": "boolean",
            "description": "Whether to read the file as binary",
            "default": false
          }
        },
        "required": ["file_path"]
      }
    },
    {
      "name": "search_files",
      "description": "Search for a pattern in files",
      "inputSchema": {
        "type": "object",
        "properties": {
          "directory": {
            "type": "string",
            "description": "The directory to search in"
          },
          "pattern": {
            "type": "string",
            "description": "The pattern to search for"
          },
          "file_extensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of file extensions to include"
          },
          "recursive": {
            "type": "boolean",
            "description": "Whether to search recursively",
            "default": true
          },
          "include_hidden": {
            "type": "boolean",
            "description": "Whether to include hidden files",
            "default": false
          },
          "respect_gitignore": {
            "type": "boolean",
            "description": "Whether to respect .gitignore patterns",
            "default": true
          },
          "context_lines": {
            "type": "integer",
            "description": "Number of context lines to include",
            "default": 2
          },
          "max_results": {
            "type": "integer",
            "description": "Maximum number of results to return",
            "default": 1000
          }
        },
        "required": ["pattern"]
      }
    },
    {
      "name": "extract_definitions",
      "description": "Extract code definitions from files",
      "inputSchema": {
        "type": "object",
        "properties": {
          "file_path": {
            "type": "string",
            "description": "The path of the file to extract definitions from"
          },
          "directory": {
            "type": "string",
            "description": "The directory to extract definitions from"
          },
          "recursive": {
            "type": "boolean",
            "description": "Whether to extract definitions recursively",
            "default": false
          },
          "include_hidden": {
            "type": "boolean",
            "description": "Whether to include hidden files",
            "default": false
          },
          "respect_gitignore": {
            "type": "boolean",
            "description": "Whether to respect .gitignore patterns",
            "default": true
          },
          "file_extensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of file extensions to include"
          }
        }
      }
    },
    {
      "name": "file_history",
      "description": "Get the Git history of a file",
      "inputSchema": {
        "type": "object",
        "properties": {
          "file_path": {
            "type": "string",
            "description": "The path of the file to get history for"
          },
          "max_commits": {
            "type": "integer",
            "description": "Maximum number of commits to return",
            "default": 10
          },
          "include_content_diff": {
            "type": "boolean",
            "description": "Whether to include content diffs",
            "default": false
          }
        },
        "required": ["file_path"]
      }
    },
    {
      "name": "find_related",
      "description": "Find files related to a given file",
      "inputSchema": {
        "type": "object",
        "properties": {
          "file_path": {
            "type": "string",
            "description": "The path of the file to find related files for"
          },
          "search_directory": {
            "type": "string",
            "description": "The directory to search in"
          },
          "max_results": {
            "type": "integer",
            "description": "Maximum number of results to return",
            "default": 20
          },
          "include_imports": {
            "type": "boolean",
            "description": "Whether to include imports",
            "default": true
          },
          "include_references": {
            "type": "boolean",
            "description": "Whether to include references",
            "default": true
          },
          "include_similar_names": {
            "type": "boolean",
            "description": "Whether to include files with similar names",
            "default": true
          },
          "respect_gitignore": {
            "type": "boolean",
            "description": "Whether to respect .gitignore patterns",
            "default": true
          }
        },
        "required": ["file_path"]
      }
    },
    {
      "name": "analyze_structure",
      "description": "Analyze the structure of a project",
      "inputSchema": {
        "type": "object",
        "properties": {
          "directory": {
            "type": "string",
            "description": "The directory to analyze"
          },
          "include_hidden": {
            "type": "boolean",
            "description": "Whether to include hidden files",
            "default": false
          },
          "respect_gitignore": {
            "type": "boolean",
            "description": "Whether to respect .gitignore patterns",
            "default": true
          },
          "max_depth": {
            "type": "integer",
            "description": "Maximum recursion depth (-1 for unlimited)",
            "default": -1
          }
        }
      }
    },
    {
      "name": "calculate_metrics",
      "description": "Calculate metrics for a project",
      "inputSchema": {
        "type": "object",
        "properties": {
          "directory": {
            "type": "string",
            "description": "The directory to calculate metrics for"
          },
          "include_hidden": {
            "type": "boolean",
            "description": "Whether to include hidden files",
            "default": false
          },
          "respect_gitignore": {
            "type": "boolean",
            "description": "Whether to respect .gitignore patterns",
            "default": true
          },
          "file_extensions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "List of file extensions to include"
          }
        }
      }
    }
  ]
}
